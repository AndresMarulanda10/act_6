---
const PAGES = [
  { label: 'Home', href: '/' },
  { label: 'About', href: '/about' },
];
// This constant defines the navigation links for the header. Each object contains a `label` (display text) and `href` (URL path).

export type Props = {
  page: string;
  title: string;
};
// This defines a TypeScript type for the component's props. It ensures that the `page` (current page name) and `title` (header title) are passed as strings.

const { title, page } = Astro.props as Props;
// Destructures the `title` and `page` props from `Astro.props` and casts them to the `Props` type for type safety.
---
<nav class="tw-bg-white tw-shadow-sm tw-px-2 sm:tw-px-4 tw-py-2.5">
  <!-- The main navigation bar with Tailwind CSS classes for styling. It has a white background, shadow, and padding. -->

  <div
    class="container tw-flex tw-flex-wrap tw-justify-between tw-items-center tw-mx-auto"
  >
    <!-- A container div that uses Tailwind CSS to create a responsive flexbox layout. It ensures the content is spaced and aligned properly. -->

    <a href="/" class="tw-flex tw-items-center">
      <!-- A clickable logo that redirects to the homepage. -->

      <img
        src="/favicon.svg"
        class="tw-mr-3 tw-h-6 sm:tw-h-9"
        alt="Astro Logo"
      />
      <!-- Displays the logo image with responsive height and margin. -->

      <span
        class="tw-self-center tw-text-xl tw-font-semibold tw-whitespace-nowrap"
        >{title}
      </span>
      <!-- Displays the `title` prop as the header text. It is styled to be bold, large, and not wrap to the next line. -->
    </a>

    <button
      data-collapse-toggle="navbar-default"
      type="button"
      class="tw-inline-flex tw-items-center tw-p-2 tw-ml-3 tw-text-sm tw-text-gray-500 tw-rounded-lg md:tw-hidden hover:tw-bg-gray-100 focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-gray-200"
      aria-controls="navbar-default"
      aria-expanded="false"
    >
      <!-- A button for toggling the mobile navigation menu. It is only visible on smaller screens (`md:tw-hidden`). -->

      <span class="tw-sr-only">Open main menu</span>
      <!-- Screen-reader-only text for accessibility, describing the button's purpose. -->

      <svg
        class="tw-w-6 tw-h-6"
        aria-hidden="true"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        ><path
          fill-rule="evenodd"
          d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
          clip-rule="evenodd"></path>
      </svg>
      <!-- An SVG icon representing a hamburger menu for mobile navigation. -->
    </button>

    <div
      class="tw-hidden tw-w-full md:tw-block md:tw-w-auto"
      id="navbar-default"
    >
      <!-- The navigation menu container. It is hidden by default (`tw-hidden`) and becomes visible on medium screens (`md:tw-block`). -->

      <ul
        class="tw-flex tw-flex-col tw-p-4 tw-mt-4 tw-bg-gray-50 tw-rounded-lg tw-border tw-border-gray-100 md:tw-flex-row md:tw-space-x-8 md:tw-mt-0 md:tw-text-sm md:tw-font-medium md:tw-border-0 md:tw-bg-white"
      >
        <!-- A list of navigation links styled for both mobile and desktop views. -->

        {
          PAGES.map((link) => (
            <li>
              <!-- Iterates over the `PAGES` array to dynamically generate navigation links. -->

              <a
                href={link.href}
                class={`tw-block tw-py-2 tw-pr-4 tw-pl-3 tw-rounded md:tw-bg-transparent md:tw-p-0 ${
                  link.label === page ? 'tw-text-blue-700' : 'tw-text-gray-700'
                }`}
                aria-current="page"
              >
                {link.label}
              </a>
              <!-- Each link is styled conditionally: if the `label` matches the current `page`, it gets a blue color (`tw-text-blue-700`); otherwise, it is gray. -->
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</nav>
<!-- The overall structure is a responsive navigation bar with a logo, a title, and links. It supports both desktop and mobile layouts. -->